spring.datasource.url= #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.mc.mysql.url')}
spring.datasource.username= #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.mc.mysql.user')}
spring.datasource.password= #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.mc.mysql.password')}
spring.datasource.driverClassName=com.mysql.jdbc.Driver
server.port=2334
mybatis.type-aliases-package=cc.vimc.bot
debug=false
spring.thymeleaf.cache=false
#HTTPAPI POST 发送消息用
QQBOT_URL= #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.http.post.url')}

#QQ 相关
MASTER_QQ= #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.master.qq')}
MC_GROUP_QQ= #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.mc.group.qq')}

#安全相关
authorization = #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.authorization')}
token = #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.access.token')}

#Minecraft RCON 协议
RCON.PASSWORD = #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.rcon.password')}
RCON.PORT = #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.rcon.port')}
MCSERVER.HOST = #{T(com.xxl.conf.core.XxlConfClient).get('qqbot.mcserver.host')}

##xxl config
# 配置中心跟地址，必填；
xxl.conf.admin.address=http://192.168.3.220:8090/xxl-conf-admin

# 环境配置，必填；如"test、ppe、product"等，指定配置加载环境
xxl.conf.env=product

# 配置中心接入验证TOKEN，选填，非空时启用，进行安全严重
#xxl.conf.access.token=

# 配置快照文件地址，必填；会周期性缓存到本地快照文件中，当从配置中心获取配置失败时，将会使用使用本地快照文件中的配置数据；提高系统可用性；
xxl.conf.mirrorfile=/data/applogs/xxl-conf/xxl-conf-mirror-sample.properties